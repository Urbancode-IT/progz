// models/Batch.js
const mongoose = require('mongoose');

const batchSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
  },
  course: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Course',
    required: true,
  },
  students: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User', 
  }],
    instructor: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User', // or 'Instructor' depending on your setup
    required: true
  },
  classTiming: {
    type: String, // e.g., "10:00 AM - 12:00 PM"
    required: true
  },
  startDate: {
    type: Date,
    required: true
  },
  endDate: {
    type: Date,
   default: null // Optional, can be set later
  },
  daysOfWeek: {
    type: [String], // e.g., ["Monday", "Wednesday", "Friday"]
    enum: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
    required: true
  },
  status: {
    type: String,
    enum: ['active', 'inactive'],
    default: 'active',
  },
  createdAt: {
    type: Date,
    default: Date.now,
  },
});

module.exports = mongoose.model('Batch', batchSchema);


// server/models/Course.js
const mongoose = require('mongoose');
const Batch = require('./Batch');

const sectionSchema = new mongoose.Schema({
  sectionName: String,
  learningMaterialNotes: String,
  learningMaterialUrls: [String],
  codeChallengeInstructions: String,
  codeChallengeUrls: [String],
  videoReferences: [String]
});

const moduleSchema = new mongoose.Schema({
  title: String,
  sections: [sectionSchema]
});

const enrollmentSchema = new mongoose.Schema({
  student: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
  enrolledDate: { type: Date, default: Date.now },
  batchId: { type: mongoose.Schema.Types.ObjectId, ref: 'Batch',default: null}, // Optional, can be null if not enrolled in a batch
  courseCompleted: { type: Boolean, default: false }
});

const courseSchema = new mongoose.Schema({
  courseName: String,
  courseId: { type: String, unique: true },
  instructor: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }],
  courseDescription: String,
  courseDuration: {
    type:Number,
    required: true
  },
  modules: [moduleSchema],
  enrolledStudents: [enrollmentSchema] // Modified
});

module.exports = mongoose.model('Course', courseSchema);

//server/models/User.js
const mongoose = require('mongoose');

const userSchema = new mongoose.Schema({
  name: String,
  email: { type: String, unique: true },
  password: String,
  phone: String,
  address: String,
  education: String,
  profession: String,
  experience: String,
  role: { type: String, enum: ['admin', 'instructor', 'student'], required: true },
  createdAt: { type: Date, default: Date.now },
  updatedAt: { type: Date, default: Date.now }
});

module.exports = mongoose.model('User', userSchema);

